@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <partial name="CreateItemModal" model="Model.NewTaskModel"/>
        </li>

        <form method="get" class="form-inline">
            @Html.HiddenFor(m => m.TodoListId)
            <div class="form-group">
                <label>@Html.CheckBoxFor(m => m.ShowDone)&nbsp;@Html.DisplayNameFor(m => m.ShowDone)</label>
            </div>
            <div class="form-group">
                <label asp-for="SortItemsBy"></label>
                @Html.DropDownListFor(
                    m => m.SortItemsBy,
                    SelectListConvenience.TodoItemsSortOptionListItems,
                    new { @class="form-control" }
                    )
            </div>
            <button type="submit" class="btn">Show</button>
        </form>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">

                <div class="row">

                    <div class="col-md-6">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-6 text-right">
                        <small>
                            @item.ResponsibleParty.UserName
                            @{
                                var gravatarProfile = await Gravatar.GetUserProfile(item.ResponsibleParty.UserName);
                            }
                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />
                            @gravatarProfile?.DisplayName
                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>

@section Scripts {
    <script src="~/js/createItemModal.js" asp-append-version="true"></script>
}